#server:
#  port: 8888
#
#spring:
#  application:
#    name: SpringCloudConfigServer
## ------------- with localfile system --------------
#  profiles:
#    active: native
#    cloud:
#      config:
#        server:
#          native:
#            search-location: classpath:/config

# ------------------ the lelow is related to githube configuration
#  cloud:
#    config:
#      server:
#        git:
#          uri: https://github.com/Ritiksharmaji/SpringBoot-Cloud-Config-Server
#          clone-on-start: true
#          default-label: main
#          username: ${GIT_USER}
#          password: ${GIT_PASSWORD}

# ---------- with database configuration ----------------
#  profiles:
#    active: jdbc
#  datasource:
#    url: jdbc:mysql://localhost:3306/serverconfig
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  cloud:
#    config:
#      server:
#        jdbc:
#          sql: SELECT PROPERTY_KEY, PROPERTY_VALUE FROM PROPERTIES WHERE APPLICATION=? AND PROFILE=? AND LABEL=?
#          default-label: main

#encrypt:
#  key: "0E329232EA6D0D73"
#encrypt:
#  key-store:
#    location: config-server.jks
#    password: mypass
#    alias: config-server-key

#encrypt:
#  key-store:
#    location: classpath:config-server.p12
#    alias: config-server-key
#    password: mypass
#    key-password: mypass
#    type: PKCS12


# ---------this is for RabbitMQ Example  with file system ----------
#server:
#  port: 8888
#spring:
#  application:
#    name: SpringCloudConfigServer
#  profiles:
#    active: native
#  cloud:
#    config:
#      server:
#        native:
#          search-locations: file:///D:\Personal\CODE\Java-Code\MicroService\ConfigurationManagment\SpringCloudConfigServer\src\main\resources\config
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: busrefresh, refresh, health, info
#

# -------------- this is for RabbitMQ Example  with database-----------------
#server:
#  port: 8888
#
#spring:
#  application:
#    name: SpringCloudConfigServer
#  profiles:
#    active: jdbc    # use database backend
#  datasource:
#    url: jdbc:mysql://localhost:3306/serverconfig2
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  cloud:
#    config:
#      server:
#        jdbc:
#          sql: SELECT PROPERTY_KEY, PROPERTY_VALUE FROM PROPERTIES WHERE APPLICATION=? AND PROFILE=? AND LABEL=?
#
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: busrefresh, refresh, health, info

##------------ with githube -----------

server:
  port: 8888

spring:
  application:
    name: SpringCloudConfigServer
  cloud:
    config:
      server:
        git:
          uri: https://github.com/Ritiksharmaji/SpringBoot-Cloud-Config-Server
          default-label: main
          clone-on-start: true
          username: ${GIT_USER}
          password: ${GIT_PASSWORD}

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: busrefresh, health, info
